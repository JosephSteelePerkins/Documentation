// LinkedIn Member Data Cookie
var linkedInMemberDataCookie = "linkedInMemberData";

/**
 * This Method Stores LinkedIn Profile Data in the Current Session
 * Upon successful member login, it displays the application form by pre-filling with candidate data
 * If member is not loggedIn, this method will prompt user to login
 * @param {object} profileData - LinkedIn Canidate Data
 */
function CacheLinkedInUserData(profileData) {
    var jsonCandiateData = JSON.stringify(profileData);

    if (GetFromWebStorage() === null) {
        SetInWebStorage(jsonCandiateData);
    }

    LoadCandidateDataForProcessing();
    PopulateJobApplicationForm(profileData);

    var memberLoggedIn = CheckMemberLoggedIn();

    var requestUrl = window.location.href.trim();

    if (memberLoggedIn === false) {
        var awliloggedinPresent = getQueryParameter("awliloggedin");

        if (awliloggedinPresent === null) {
            if (requestUrl.match(/\?/gi) !== null) {
                if (requestUrl.match(/awliloggedin/gi) === null)
                    window.location = requestUrl + "&awliloggedin=true";
            }
            else
                window.location = requestUrl + "?awliloggedin=true";
        }
        else {
            ShowLoginFormDialog();
        }
    }
    else {
        ShowJobApplicationDialog();
    }
}

// Retrieves Stored LinkedIn Profile Data From Browser Storage
function GetFromWebStorage() {
    if (typeof (Storage) !== "undefined") {
        return sessionStorage.getItem(linkedInMemberDataCookie);
    } else {
        alert("Apply with LinkedIn 2.0 is Not Supported In this Web Browser Version. Please Update Your Web Browser!");
    }
}

/**
 * Stores LinkedIn JSON Profile Data In Browser Storage as a Session
 * @param {string} dataToStore - LinkedIn Profile Data Object as a string
 */
function SetInWebStorage(dataToStore) {
    if (typeof (Storage) !== "undefined") { 
        sessionStorage.setItem(linkedInMemberDataCookie, dataToStore);
    } else {
        alert("Apply with LinkedIn 2.0 is Not Supported In this Web Browser Version. Please Update Your Web Browser!");
    }
}

/**
 * Removes the LinkedIn Profile Data From Browser Storage
 * */
function RemoveFromWebStorage() {

    if (typeof (Storage) !== "undefined") {        
        sessionStorage.removeItem(linkedInMemberDataCookie);
    } else {        
        alert("Apply with LinkedIn 2.0 is Not Supported In this Web Browser Version. Please Update Your Web Browser!");
    }
}

/**
 * This Method Removes the existing AWLI Application Data from Session Cookie
 */
function ClearApplyWithCookieData() {

    if (GetFromWebStorage() !== null)
        RemoveFromWebStorage();
}

/**
 * This Method
 * @return {Boolean} Boolean based on member loggedIn status
 * */
function CheckMemberLoggedIn() {

    var loggedIn = false;

    var memberLoggedInStatus = $("#hfMemberLoggedIn");

    if (memberLoggedInStatus.length > 0) {

        var loggedInValue = memberLoggedInStatus.val();

        loggedIn = (loggedInValue == "true");
    }

    console.log("LoggedIn: " + loggedIn);

    return loggedIn;
}

/**
 * This method retrieves LinkedIn Candiate Data from the stored cookie and Populates the Candidate data hidden field
 **/
function LoadCandidateDataForProcessing() {

    var linkedInProfileData = GetFromWebStorage();

    if (linkedInProfileData !== null) {
        $("#hfLinkedInCandidatePayload").val(linkedInProfileData);
    }
}

/**
 * This Method Makes the Job Application Pop Up visible
 **/
function ShowJobApplicationDialog() {
    $('#exampleModalCenter').modal({ show: true });
}

function ShowLoginFormDialog() {
    $('#loginRegisterModal').modal({ show: true });
}

/**
 * This method Validates that the Job Application Form Exists and Pre-fills the Fields using Candidate Object
 * @param {Object} profileData - Candidate Data Object
 */
function PopulateJobApplicationForm(profileData) {
    console.log(profileData);
    var jobApplicationDialog = document.getElementById("exampleModalCenter");

    if (jobApplicationDialog !== null) {
        var candidateFirstName = $("#tbCandidateFirstName");
        var candidateLastName = $("#tbCandidateLastName");
        var candidatePhoneNumber = $("#tbCandidatePhone");
        var candidateEmail = $("#tbCandidateLinkedInEmail");

        candidateFirstName.val(profileData.firstName);
        candidateLastName.val(profileData.lastName);
        candidatePhoneNumber.val(profileData.phoneNumber);
        candidateEmail.val(profileData.emailAddress);
    }
}

/**
 * This Method returns a value of a query parameter using a specified argument
 * @param {String} paramValue - Query Parameter To search
 * @returns {String} Query parameter value as string
 */
function getQueryParameter(paramValue) {

    var queryParams = window.location.search;
    var parameterDictionary = {};

    if (queryParams.match(/\?/gi) !== null) {
        queryParams = queryParams.replace(/\?/gi, '');

        if (queryParams.match(/&/gi) !== null) {
            var parameters = queryParams.split('&');

            for (var param in parameters) {
                var splittedParam = parameters[param].split("=");
                parameterDictionary[splittedParam[0]] = splittedParam[1];
            }
        }
        else {
            var splittedKeyVal = queryParams.split("=");
            parameterDictionary[splittedKeyVal[0]] = splittedKeyVal[1];
        }
    }

    if (parameterDictionary[paramValue] != null)
        return parameterDictionary[paramValue];
    else
        return null;
}

/**
 * Continue with LinkedIn method initialises login with linkedIn
 **/
function continueWithLinkedInInit() {

    var continueWithLinkedIn = document.getElementById("continueWithLinkedIn");
    var loginTypeHiddenField = document.getElementById("hfLoginType");
    var linkedInSignInButton = document.getElementById("btnLinkedInSignIn");

    var myFunction = function () {

        if (loginTypeHiddenField != null) {
            loginTypeHiddenField.value = "linkedIn";
        }

        if (linkedInSignInButton != null) {
            console.log("Linked In SignIn Clicked");
            linkedInSignInButton.click();
        }
    };


    if (continueWithLinkedIn != null) {

        if (continueWithLinkedIn.addEventListener) {                    // For all major browsers, except IE 8 and earlier
            continueWithLinkedIn.addEventListener("click", myFunction);
        } else if (continueWithLinkedIn.attachEvent) {                  // For IE 8 and earlier versions
            continueWithLinkedIn.attachEvent("onclick", myFunction);
        }
    }
}

$(document).ready(function () {
    var awliLoginPresent = getQueryParameter("awliloggedin");
    var awliLoggedIn = getQueryParameter("awli");

    var continueWithLinkedIn = $("#continueWithLinkedIn");

    LoadCandidateDataForProcessing();

    if (continueWithLinkedIn.hasClass("form-control")) {
        continueWithLinkedIn.removeClass("form-control");
    }

    if (GetFromWebStorage() !== null) {
        PopulateJobApplicationForm(JSON.parse(GetFromWebStorage()));
    }

    if (awliLoginPresent !== null) {
        $('#loginRegisterModal').modal({ show: true });
    }

    if (awliLoggedIn !== null)
        $('#exampleModalCenter').modal({ show: true });
    else if (CheckMemberLoggedIn) {
        var linkedInApplication = $("#hfLinkedInCandidatePayload").val();

        if (linkedInApplication != null && linkedInApplication.trim() != '')
            ShowJobApplicationDialog();
    }

    $("#tbCandidateLoginPassword").keyup(function () {
        var linkedInManualLoginErrorMessage = $("#linkedin-candidate-login-error");
        var loginPasswordError = $("#rfvCandidateLoginPassword");

        if (linkedInManualLoginErrorMessage.length > 0 && linkedInManualLoginErrorMessage.hasClass('hidden') == false) {
            linkedInManualLoginErrorMessage.addClass('hidden');
        }

        if (loginPasswordError.length > 0 && loginPasswordError.css('display') != "none") {
            loginPasswordError.css('display', 'none');
        }
    });

    $("#tbCandidateLoginEmail").keyup(function () {
        var loginEmailError = $("#rfvCanidateLoginEmailAddress");

        if (loginEmailError.length > 0 && loginEmailError.css('display') != "none") {
            loginEmailError.css('display', 'none');
        }
    });

});